8.03*100 = 802.9999999999999
9.7*100 = 969.9999999999999

0.1 + 0.2 = 0.30000000000000004
0.1 + 0.7 = 0.7999999999999999
0.2 + 0.4 = 0.6000000000000001

0.3 - 0.2 = 0.09999999999999998
1.5 - 1.2 = 0.30000000000000004

0.8 * 3 = 2.4000000000000004
19.9 * 100 = 1989.9999999999998

0.3 / 0.1 = 2.9999999999999996
0.69 / 10 = 0.06899999999999999

0.1 + 0.2 === 0.3 // false
(0.3 - 0.2) === (0.2 - 0.1) // false



function importCalculation() {
        Number.prototype.add = function (arg){
          return accAdd(this, arg);
        };
        Number.prototype.subtr = function (arg) {
          return accSubtr(this, arg);
        };
        Number.prototype.mul = function (arg){
          return accMul(this, arg);
        };
        Number.prototype.div = function (arg){
          return accDiv(this, arg);
        };

        function accAdd(arg1, arg2){
          arg1 = scienceNum(arg1);
          arg2 = scienceNum(arg2);
          var r1, r2, m;
          try{
            r1=arg1.toString().split(".")[1].length;
          }catch(e){
            r1=0;
          }
          try{
            r2=arg2.toString().split(".")[1].length;
          }catch(e){
            r2=0;
          }
          m=Math.pow(10, Math.max(r1, r2));
          return (arg1.mul(m) + arg2.mul(m)).div(m);
        }

        function accSubtr(arg1,arg2){
          arg1 = scienceNum(arg1);
          arg2 = scienceNum(arg2);
          var r1, r2, m, n;
          try{
            r1 = arg1.toString().split(".")[1].length;
          }catch(e){
            r1 = 0;
          }

          try{
            r2 = arg2.toString().split(".")[1].length;
          }catch(e){
            r2 = 0;
          }

          n = Math.max(r1, r2);
          m = Math.pow(10, n);

          return Number(((arg1.mul(m) - arg2.mul(m)).div(m)).toFixed(n));
        }

        function accDiv(arg1, arg2){
          arg1 = scienceNum(arg1);
          arg2 = scienceNum(arg2);
          var t1=0,t2=0,r1,r2;
          try{t1=arg1.toString().split(".")[1].length}catch(e){}
          try{t2=arg2.toString().split(".")[1].length}catch(e){}

          r1=Number(arg1.toString().replace(".",""));
          r2=Number(arg2.toString().replace(".",""));
          return (r1/r2).mul(Math.pow(10,t2-t1));
        }

        function accMul(arg1,arg2) {
          arg1 = scienceNum(arg1);
          arg2 = scienceNum(arg2);
          var m=0,
            s1=arg1.toString(),
            s2=arg2.toString();
          try{
            m+=s1.split(".")[1].length;
          }catch(e){

          }
          try{
            m+=s2.split(".")[1].length;
          }catch(e){

          }
          return Number(s1.replace(".", ""))*Number(s2.replace(".", ""))/Math.pow(10, m);
        }

      }
      function scienceNum(value) {
        if(!value) {
          return 0;
        }
        value = value.toString();
        var num = 0;
        var maxDecimalPoint = 14;
        if((num=value.indexOf('E'))!=-1||(num=value.indexOf('e'))!=-1) {
          var doubleStr=value.substring(0,num);
          var eStr=value.substring(num+1,value.length);
          eStr=parseInt(eStr);
          var len = Math.min(Math.abs(eStr) - 1, maxDecimalPoint);
          return parseFloat(parseFloat(value).toFixed(len));
        }

        return parseFloat(parseFloat(value).toFixed(maxDecimalPoint));
      }
